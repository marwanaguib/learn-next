{"version":3,"file":"static/webpack/static\\development\\pages\\post.js.b94c6d0cfcaaae9365d3.hot-update.js","sources":["webpack:///./pages/post.js"],"sourcesContent":["import Layout from '../components/layout/main'\nimport fetch from 'isomorphic-unfetch'\nimport { connect } from 'react-redux'\nimport {get_posts, fetch_posts} from \"../actions/posts\"\nimport Article from \"../components/comp/article\"\n\n\nclass Post extends React.Component {\nstatic async getInitialProps ({reduxStore, query}) {\n    // const { id } = context.query\n    // const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\n    // const show = await res.json()\n    // console.log(show)\n\n    console.log(`Fetched show:`)\n    console.log(query)\n    // console.log(reduxStore.getState())\n\n    await reduxStore.dispatch(fetch_posts(query.id))\n    console.log(reduxStore.getState().posts)\n    return {...reduxStore.getState().posts}\n\n    // return { show }\n  }\n  componentDidMount () {\n    const { dispatch } = this.props\n    console.log('test')\n    // dispatch(get_posts(true))\n    // this.result = startClock(dispatch)\n  }\n//   changeState(e,flag){\n//       e.preventDefault();\n//       this.props.dispatch(get_posts(flag))\n//   }\n\n  render(){\n      console.log(this)\n      return(\n    <Layout>\n        {/*<h1>{this.props.show.name}</h1>\n       <p>{this.props.show.summary.replace(/<[/]?p>/g, '')}</p>\n  <img src={this.props.show.image.medium}/>*/}\n  <Article />\n  {this.props.postDetail.name}\n\n    </Layout>\n    )\n  }\n}\n\n\n///// container\n\n// const mapPostsToProps = state => {\n//     return{\n//         postDetail: state.posts.postDetail,\n//         result: state.posts.result\n// }}\n\n\nexport default connect()(Post);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAiBA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAUA;;;;;;;;;;;;AAvCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AAdA;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}